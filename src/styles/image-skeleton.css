/* src/styles/image-skeleton.css */

/*
  图片容器的核心职责是为内部的骨架屏和图片提供一个相对定位的上下文。
  它的尺寸将由内部的 Next.js Image 组件自动撑开。
*/
.post-image-container {
  display: block;
  position: relative;
  overflow: hidden; /* 确保子元素的圆角生效 */
  border-radius: 0.75rem;
  /* 添加一个背景色，以防止在加载和过渡期间出现透明的“空洞” */
  background-color: var(--color-neutral-100);
}

html.dark .post-image-container {
  background-color: var(--color-neutral-50);
}

/*
  骨架屏是一个绝对定位的遮罩层，它会覆盖整个容器。
  它默认可见，当图片加载完成后，会通过 'loaded' 类平滑地淡出。
*/
.image-skeleton {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-neutral-200);
  opacity: 1;
  transition: opacity 0.4s ease-in-out;
  z-index: 2; /* 初始时，骨架屏在最上层 */
}

html.dark .image-skeleton {
  background-color: var(--color-neutral-100);
}

.image-skeleton.loaded {
  opacity: 0;
  pointer-events: none; /* 淡出后不再响应鼠标事件，让下方的图片可以被点击 */
}

/*
  由 Next.js 渲染的真实图片。它负责定义容器的尺寸和宽高比。
  它在布局上是静态的，不是绝对定位。
*/
.post-image {
  display: block;
  width: 100%;
  height: auto; /* 关键：这让图片能根据宽度自适应高度，保持其固有宽高比 */
  cursor: pointer;
  /* 核心修正: 移除所有 opacity 和 transition 属性。图片默认就是可见的。 */
  z-index: 1; /* 图片在骨架屏下方 */
}
